% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/versioning.R
\name{versioning}
\alias{versioning}
\alias{Get_Version}
\alias{Set_Version}
\alias{Add_Version}
\alias{Update_Version}
\alias{Check_Version}
\alias{Match_Version_Github}
\title{Functions for versioning of packages}
\usage{
Get_Version(dir = ".")

Set_Version(dir = ".", Version)

Add_Version(Version, type)

Update_Version(dir = ".", type = "dev")

Check_Version(Version)

Match_Version_Github(
  user = NULL,
  repo = NULL,
  ref = "main",
  git_dir = NULL,
  dir = "."
)
}
\arguments{
\item{dir}{directory containing the \code{DESCRIPTION} file. Can also be
a web address, such as a github repo}

\item{Version}{an appropriate vector for version numbers. Must be of
length 4 and the elements mst be named
\code{"major"}, \code{"minor"}, \code{"patch"} and \code{"dev"}, respectively}

\item{type}{accepts \code{"major"}, \code{"minor"}, \code{"patch"}, \code{"dev"} or \code{"none"}
to describe what kind of update to perform. whichever
type is supplied will be the level that is incremented.
All lower levels will be reset to 0 (or 9000 for dev).}

\item{user}{username for Github lookup}

\item{repo}{repository for Github lookup. If NULL, will extract the package name
from the \code{DESCRIPTION} file}

\item{ref}{the branch to use as a lookup. Defaults to \code{"master"}}

\item{git_dir}{directory for the github repo. Can be found by using}
}
\description{
Performs functions surrounding versioning within packages.
\itemize{
\item \code{Get_Version(dir)} will extract the current version from the
\code{DESCRIPTION} file in \code{dir}.
}

\itemize{
\item \code{Set_Version(dir,Version)} will update the \code{DESCRIPTION} file in \code{dir}.
}

\itemize{
\item \code{Add_Version(Version,type)} will increment the version based
on the level provided (major, minor, patch or dev).
}

\itemize{
\item \code{Update_Version(type)} Gets, Adds and Sets a new Version Update
based on the \code{type} of the update.
}

\itemize{
\item \code{Check_Version(Version)} Checks if \code{Version} is appropriately named version.
}

\itemize{
\item \code{Github_Version_match(user,repo,ref,dir)} extracts the current
version of the github repo, and sets the current version to match.
Looks for \code{DESCRIPTION} at the address:\code{"https://raw.githubusercontent.com/<user>/<repo>/<ref>/"}
}
}
