% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/signed-log.R
\name{signed-log}
\alias{signed-log}
\alias{signed_log}
\alias{unsigned_log}
\title{Calculates the signed log of a value}
\usage{
signed_log(x, base = exp(1))

unsigned_log(x, base = exp(1))
}
\arguments{
\item{x}{a numeric vector.}

\item{base}{a positive number}
}
\description{
The standard logarithm (\code{\link[base]{log}}) can takes positive values
as inputs and rescales values that are heavily clustered around low values
(with outliers) and thus helps to Normalise some skewed data.
However, if your data is clustered around zero and also contains both positive and
negative values, the negative values cannot be passed into a logarithm
function. The `signed_log` function will adjust the values slightly to
maintain both the logarithmic-spread of the distribution and the sign.

\deqn{ \textrm{signed_log}_b(x) = \textrm{sign}(x)\log_b(|x| + 1)}
}
\examples{
x <- seq(-10,10,0.01)
y <- signed_log(x)

plot(x,y,type="l")

x0 <- unsigned_log(y)

plot(y,x0,type="l")

plot(x,x0,type="l")
}
